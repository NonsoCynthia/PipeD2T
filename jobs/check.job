#!/bin/bash

#SBATCH --gres=gpu:a100:1 --nodelist=g130
#SBATCH -p long
#SBATCH -J Pipe_b
#SBATCH --cpus-per-task=10
#SBATCH --mem=30000
#SBATCH -t 9-23:59:59


source /home/cosuji/anaconda3/etc/profile.d/conda.sh
conda activate webnlg

## Declare your paths here
dataset="/home/cosuji/spinning-storage/cosuji/NLG_Exp/webnlg/data/deepnlg"
write_path="/home/cosuji/spinning-storage/cosuji/NLG_Exp/webnlg/results"
surfacevocab="/home/cosuji/spinning-storage/cosuji/NLG_Exp/webnlg/data/deepnlg/input/sr/surfacevocab.json"
model_name="facebook/bart-large"
map_model="bart"
lr=3e-5

###map_model=bart, t5, t5-large, gpt2
###lr=3e-5, 1e-5, 1e-5, 5e-5
###model_name=facebook/bart-large, t5-base, t5-large, gpt2,  

# Edit this jobs for each model, task, and gen_model
# Training the model

#for task in ordering structuring lexicalization reg sr end2end; do
for task in ordering structuring; do
#for task in lexicalization reg sr; do
    if [ "$task" != "ordering" ] && [ "$task" != "structuring" ]; then
        tbsize=32
    else
        tbsize=16
    fi
    echo "$task started!!!"
    if [ "$task" != "sr" ]; then
        echo "$task training!"
        python3 ../main.py --tokenizer "$model_name" \
                        --model_path "$model_name" \
                        --task "$task" \
                        --data_path "$dataset" \
                        --epochs 20 \
                        --learning_rate $lr \
                        --train_batch_size $tbsize \
                        --early_stop 10 \
                        --max_length 300 \
                        --write_path "$write_path" \
                        --verbose \
                        --batch_status 16

        # Making Inferences
        echo "$task generating inferences!"
        python3 ../inference.py --tokenizer "$model_name" \
                        --model_path "$write_path" \
                        --task "$task" \
                        --data_path "$dataset" \
                        --batch_size 16 \
                        --max_length 300 \
                        --verbose \
                        --batch_status 16

        if [ "$task" != "reg" ] && [ "$task" != "sr" ] && ["$task" != "end2end" ]; then
            # Mapping the outputs
            echo "$task mapping!"
            python3 ../mapping.py --previous_data "$dataset" \
                            --pipeline_data "$write_path" \
                            --previous_task "$task" \
                            --Gen_model "$map_model"
        fi

    elif [ "$task" == "sr" ]; then 
        echo "Surface Realization!"
        # Surface Realization
        python3 ../realization.py --model "$map_model" \
                            --task "$task" \
                            --surface_path "$surfacevocab" \
                            --write_path "$write_path"
    fi

    echo "$task finished!!!"
done
